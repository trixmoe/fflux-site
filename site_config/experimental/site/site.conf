-- See https://gluon.readthedocs.io/
{
	-- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
	hostname_prefix = 'fflux-',

	-- Name of the community.
	site_name = 'Freifunk Luxembourg',

	-- Shorthand of the community.
	site_code = 'fflux',

	-- 32 bytes of random data, encoded in hexadecimal
	-- This data must be unique among all sites and domains!
	-- Can be generated using: echo $(hexdump -v -n 32 -e '1/1 "%02x"' </dev/urandom)
	domain_seed = '20d0d9c09a27d488c1291da65fe4dd4971ff8631dba0195be15805dbad01f78e',

	-- Prefixes used within the mesh.
	-- prefix6 is required, prefix4 can be omitted if next_node.ip4 is not set.
	prefix4 = '10.24.128.0/18',
	prefix6 = 'fd4e:f2d7:88d2:fffe::/64',


	-- Timezone of your community.
	-- See https://openwrt.org/docs/guide-user/base-system/system_configuration#time_zones
	timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

	-- List of NTP servers in your community.
	-- Must be reachable using IPv6!
	ntp_servers = {'fd4e:f2d7:88d2:fffe::11','fd4e:f2d7:88d2:fffe::12','fd4e:f2d7:88d2:fffe::19'},

	-- Wireless regulatory domain of your community.
	regdom = 'LU',

	-- Wireless configuratoin for 2.4 GHz interfaces.
	wifi24 = {
		-- Wireless channel.
		channel = 1,

		ap = {
			ssid = 'luxembourg.freifunk.net',
		},
		mesh = {
			-- usually you don't want users to connect to this mesh-SSID,
			-- so use a cryptic id that no one will accidentally mistake for the client WiFi
			id = 'freifunk-mesh',
			mcast_rate = 12000,
		},
	},

	-- Wireless configuration for 5 GHz interfaces.
	-- This should be equal to the 2.4 GHz variant, except
	-- for channel and htmode.
	wifi5 = {
		channel = 36;

		ap = {
			ssid = 'luxembourg.freifunk.net',
		},
		mesh = {
			id = 'freifunk-mesh',
			mcast_rate = 12000,
		},
	},

	mesh = {
		vxlan = true,
		batman_adv = {
			routing_algo = 'BATMAN_IV',
		},
	},

	-- The next node feature allows clients to always reach the node it is
	-- connected to using a known IP address.
	next_node = {
		-- anycast IPs of all nodes
		ip4 = '10.24.128.1',
		ip6 = 'fd4e:f2d7:88d2:fffe::1',

		-- anycast MAC of all nodes
		mac = '32:3d:f9:8f:01:53',
	},

	mesh_vpn = {
		enabled = true,
		fastd = {
			-- Refer to https://fastd.readthedocs.io/en/latest/ to better understand
			-- what these options do.

			-- List of crypto-methods to use.
			methods = {'salsa2012+umac'},
			mtu = 1406,
			configurable = true,

			groups = {
				backbone = {
					-- Limit number of connected peers to reduce bandwidth.
					limit = 1,

					-- List of peers.
					peers = {
						gw1 = {
							key = 'd5af753220451b6c181cca469835da9c67d3ca9603465e13a5adb9b64f89f3c6',
							remotes = {'ipv4 "fflux-gw1.freifunk.lu" port 10000'},
						},
						gw2 = {
							key = '3c42a77d863cb0475ec5a9e9b9c63ff557f8bac991b78a26427f100cc130462b',
							remotes = {'ipv4 "fflux-gw2.freifunk.lu" port 10000'},
						},
						test = {
							key = '95b22943135927cc1da6800ba152819ae5ee26cbb83d6354bc81a5ce632fcb5a',
							remotes = {'ipv4 "fflux-test.freifunk.lu" port 10000'},
						},
					},
				},
			},
		},
		bandwidth_limit = {
			-- preset can be enabled by default here
			enabled = false,

			-- in kbit/s
			egress = 2560, -- 2 Mbit/
			ingress = 10240, -- 10 Mbit/s
		},
	},

	autoupdater = {
		-- Set GLUON_AUTOUPDATER_ENABLED to enable the autoupdater by default for newly installed nodes.
		enabled = true,
		-- Default branch (optional), can be overridden by setting GLUON_AUTOUPDATER_BRANCH when building.
		branch = 'stable',

		branches = {
			stable = {
				name = 'stable',

				-- List of mirrors to fetch images from. IPv6 required!
				mirrors = {
					'http://[fd4e:f2d7:88d2:fffe::11]/stable/sysupgrade',
					'http://[fd4e:f2d7:88d2:fffe::12]/stable/sysupgrade',
					'http://[fd4e:f2d7:88d2:fffe::19]/stable/sysupgrade',
					'http://firmware.freifunk.lu/stable/sysupgrade',
				},

				good_signatures = 1,

				pubkeys = {
						'22e564fd31849637738ab5881469ea51cd4afd181c444244eb8a8ee04df40fef', -- orimpe
						'45c0d4a3d60c03f81ea75dd887474d99b29cd541f30807465e01de6c1b721b54', -- xbr
						'0e6c109a94d062fb5d03c49d42a7e13db5a5c6f7639922e4da38d30026ee7164', -- metalgamer
						'6e70a4bff82d70bb4f7d19ab170bf9f9aee64181567fefee040995fb9e5c1547' -- fantawams
				},
			},

			beta = {
				name = 'beta',

				-- List of mirrors to fetch images from. IPv6 required!
				mirrors = {
					'http://[fd4e:f2d7:88d2:fffe::11]/beta/sysupgrade',
					'http://[fd4e:f2d7:88d2:fffe::12]/beta/sysupgrade',
					'http://[fd4e:f2d7:88d2:fffe::19]/beta/sysupgrade',
					'http://firmware.freifunk.lu/beta/sysupgrade',
				},

				good_signatures = 1,

				pubkeys = {
					'22e564fd31849637738ab5881469ea51cd4afd181c444244eb8a8ee04df40fef', -- orimpe
					'45c0d4a3d60c03f81ea75dd887474d99b29cd541f30807465e01de6c1b721b54', -- xbr
					'0e6c109a94d062fb5d03c49d42a7e13db5a5c6f7639922e4da38d30026ee7164', -- metalgamer
					'6e70a4bff82d70bb4f7d19ab170bf9f9aee64181567fefee040995fb9e5c1547' -- fantawams
				},
			},

			experimental = {
				name = 'experimental',

				-- List of mirrors to fetch images from. IPv6 required!
				mirrors = {
					'http://[fd4e:f2d7:88d2:fffe::11]/experimental/sysupgrade',
					'http://[fd4e:f2d7:88d2:fffe::12]/experimental/sysupgrade',
					'http://[fd4e:f2d7:88d2:fffe::19]/experimental/sysupgrade',
					'http://firmware.freifunk.lu/experimental/sysupgrade',
				},

				good_signatures = 1,

				pubkeys = {
						'22e564fd31849637738ab5881469ea51cd4afd181c444244eb8a8ee04df40fef', -- orimpe
						'45c0d4a3d60c03f81ea75dd887474d99b29cd541f30807465e01de6c1b721b54', -- xbr
						'0e6c109a94d062fb5d03c49d42a7e13db5a5c6f7639922e4da38d30026ee7164', -- metalgamer
						'6e70a4bff82d70bb4f7d19ab170bf9f9aee64181567fefee040995fb9e5c1547' -- fantawams
				},
			},
		},
	},

	ssid_changer = {
		switch_timeframe = 5,  -- only once every timeframe (in minutes) the SSID will change to the Offline-SSID
									-- set to 1440 to change once a day
									-- set to 1 minute to change every time the router gets offline
		first = 5,              -- the first few minutes directly after reboot within which an Offline-SSID always may be activated (must be <= switch_timeframe)
		prefix = 'FF_Offline_', -- use something short to leave space for the nodename (no '~' allowed!)
		suffix = 'nodename',    -- generate the SSID with either 'nodename', 'mac' or to use only the prefix: 'none'

		tq_limit_enabled = false,   -- if false, the offline SSID will only be set if there is no gateway reacheable
											-- upper and lower limit to turn the offline_ssid on and off
												-- in-between these two values the SSID will never be changed to prevent it from toggeling every minute.
		tq_limit_max = '45',    -- upper limit, above that the online SSID will be used
		tq_limit_min = '30'     -- lower limit, below that the offline SSID will be used
	},
}
